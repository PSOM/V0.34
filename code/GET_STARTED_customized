A. If you want to have greater control on the installation, only 4 steps are necessary to start running psom.

------
step 1: Please edit the ./optfile to set the options that fit your environment. Be careful with the syntax ! 

------
step 2: When this file is correctly set, you can type this command:

   ##############################
   #  sh tools/compile_complex.sh
   ##############################
  It will create the makefile in ./mkfile.
  
------
step 3: Please edit the ./namelist file.

------
step 4: When this file is correctly set, you can type this command:
   ##############################
   # ./exe/nh < ./namelist
   ##############################
  It will start and run the model.
  By default, the output will appear on the screen and the output files will go to ../output/.



B. Further use:

* **************************
* Tips to not using netcdf:

  By default, both binary and netcdf outputs are created. If you wish not to use netcdf and do not want to install netcdf libraries, follow these steps previously to the 4 steps process described above:

   - edit ./optfile and set define_netcdf to "F" : 
      define_netcdf=T           by default
      define_netcdf=F           if you do not want using netcdf.


   - edit ./model/inc/cppdef and undefine output_netcdf :
      #define file_output_cdf   by default
      #undef file_output_cdf    if you do not want to use netcdf.

   That should be it !

* *******************
* Use of model_build:

  If nothing is put in model_build, then the compilation is a classical one. BUT, this directory comes with a structure (model / model_build) that may make the development easier. You can use it this way:
    Instead of replacing files in ./model, you can copy (from ./model and then make modifications or from your own versions) .f90 files in ./model_build.
    When using tools/compile_complex.sh, these new files will overtake those from ./model. The executable will be created based on a combination of old and new .f90 files.   
  If you do not want to use that possibility, you still can use tools/compile_complex.sh, which will then be equivalent to :
    ##############################
    # sh tools/genmakefilel
    # sh tools/compile_simple.sh
    ##############################



C. Additional indications:

* To clean up a bit the mkfile directory, you can type:
   ##############################
   # make -Cmkfile/ clean 
   ##############################
   Use cleanmore instead of clean to also remove the executable file. 



